java.lang.OutOfMemoryError: GC overhead limit exceeded
	at game.item.ItemAssistant.createGroundItem(ItemAssistant.java:2022)
	at game.item.ItemHandler.createGroundItem(ItemHandler.java:214)
	at game.content.packet.DropItemPacket.processPacket(DropItemPacket.java:148)
	at network.packet.PacketHandler.processPacket(PacketHandler.java:422)
	at game.player.Player.processQueuedPackets(Player.java:5744)
	at game.player.PlayerHandler.packetProcessing(PlayerHandler.java:145)
	at core.Server$1.execute(Server.java:228)
	at core.maintick.Task.tick(Task.java:126)
	at core.maintick.TaskScheduler.run(TaskScheduler.java:110)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Sep 20, 2017 1:22:18 PM core.maintick.TaskScheduler run
SEVERE: Exception during task execution.
java.lang.OutOfMemoryError: GC overhead limit exceeded
	at game.item.ItemAssistant.createGroundItem(ItemAssistant.java:2022)
	at game.item.ItemHandler.createGroundItem(ItemHandler.java:214)
	at game.content.packet.DropItemPacket.processPacket(DropItemPacket.java:148)
	at network.packet.PacketHandler.processPacket(PacketHandler.java:422)
	at game.player.Player.processQueuedPackets(Player.java:5744)
	at game.player.PlayerHandler.packetProcessing(PlayerHandler.java:145)
	at core.Server$1.execute(Server.java:228)
	at core.maintick.Task.tick(Task.java:126)
	at core.maintick.TaskScheduler.run(TaskScheduler.java:110)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)

Exception in thread "Thread-3" java.lang.OutOfMemoryError: GC overhead limit exceeded
	at java.util.HashMap.newNode(Unknown Source)
	at java.util.HashMap.putVal(Unknown Source)
	at java.util.HashMap.put(Unknown Source)
	at java.util.jar.Attributes.put(Unknown Source)
	at java.util.jar.Attributes.putValue(Unknown Source)
	at java.util.jar.Attributes.read(Unknown Source)
	at java.util.jar.Manifest.read(Unknown Source)
	at java.util.jar.Manifest.<init>(Unknown Source)
	at java.util.jar.JarFile.getManifestFromReference(Unknown Source)
	at java.util.jar.JarFile.getManifest(Unknown Source)
	at sun.misc.URLClassPath$JarLoader$2.getManifest(Unknown Source)
	at java.net.URLClassLoader.defineClass(Unknown Source)
	at java.net.URLClassLoader.access$100(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.net.URLClassLoader$1.run(Unknown Source)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at java.security.Provider$Service.getImplClass(Unknown Source)
	at java.security.Provider$Service.newInstance(Unknown Source)
	at javax.crypto.KeyGenerator.nextSpi(KeyGenerator.java:344)
	at javax.crypto.KeyGenerator.<init>(KeyGenerator.java:168)
	at javax.crypto.KeyGenerator.getInstance(KeyGenerator.java:223)
	at sun.security.ssl.JsseJce.getKeyGenerator(Unknown Source)
	at sun.security.ssl.HandshakeMessage$Finished.getFinished(Unknown Source)
	at sun.security.ssl.HandshakeMessage$Finished.<init>(Unknown Source)
	at sun.security.ssl.ClientHandshaker.sendChangeCipherAndFinish(Unknown Source)
	at sun.security.ssl.ClientHandshaker.serverHelloDone(Unknown Source)
	at sun.security.ssl.ClientHandshaker.processMessage(Unknown Source)
	at sun.security.ssl.Handshaker.processLoop(Unknown Source)
	at sun.security.ssl.Handshaker.process_record(Unknown Source)
